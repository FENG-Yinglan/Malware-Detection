#!/usr/bin/python
# coding=utf-8
#
# @author Guanhong
#


import multiprocessing
import os



f = open('../data/malware_list_15336.txt')
filelist = f.readlines()
f.close()

permissions = []
allmappings = []

i = 0
count = 0
# mappings = []
for line in open('../data/jellybean_allmappings.txt'):
	if i == 0:
		permissions.append(line.strip())
	elif i == 1:
		line = line.split(' ')
		count = int(line[0])
	else:
		# mappings.append(line)
		allmappings.append(line)

	i += 1
	if i == count + 2:
		i = 0
		# allmappings.append(mappings)
		# mappings = []



def func(apkname):
	api = []
	count = []

	fname = '../data/mudflow_unpacked/' + apkname.strip() + '/smali'
	if os.path.exists(fname):
		for dirpath, dirnames, filenames in os.walk(fname):
			for filename in filenames:
				path = dirpath + '/' + filename
				for line in open(path):
					if 'android/' in line:
						start = line.index('android')
						line = line[start:]
						if '->' in line:
							if '(' in line:
								end = line.index('(')
								line = line[:end]
							else:
								line = line[:len(line)-1]
							if line not in api:
								api.append(line)
								count.append(1)
							else:
								count[api.index(line)] += 1

	found_api = []
	num_api = []
	for x in range(0, len(api)):
		if '->' in api[x]:
			line = api[x].replace(';', '').replace('/', '.').split('->')
			for k in range(0, len(allmappings)):
				if line[0] in allmappings[k] and line[1] in allmappings[k]:
					if k in found_api:
						num_api[found_api.index(k)] += count[x]
					else:
						found_api.append(k)
						num_api.append(count[x])
					break

	output = open('../data/mudflow_api/' + apkname.strip() + '.txt', 'w')
	for k in range(0, len(found_api)):
		output.write(str(found_api[k]) + ',' + str(num_api[k]) + '\n')

	print filelist.index(apkname)


for apk in filelist:
	func(apk)

# pool = multiprocessing.Pool(processes = 4)
# pool.map(func, filelist)
# pool.close()
# pool.join()