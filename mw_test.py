#!/usr/bin/python
#coding=utf-8
#
# @author Guanhong
#


import scipy.stats
import statsmodels.sandbox.stats.multicomp

# ben_perm = []
# mal_perm = []
# ben_api = []
# mal_api =[]

# for line in open('benign_perm_num.txt'):
# 	ben_perm.append(float(line.strip())/31185)

# for line in open('malware_perm_num.txt'):
# 	mal_perm.append(float(line.strip())/15336)

# for line in open('benign_api_count.txt'):
# 	ben_api.append(float(line.strip())/31185)

# for line in open('malware_api_count.txt'):
# 	mal_api.append(float(line.strip())/15336)


# s, p = scipy.stats.mannwhitneyu(ben_perm, mal_perm)

# print s, p

# ben = []
# mal = []

# for line in open('perm_benign_all.txt'):
# 	line = line.strip().split(',')
# 	ben.append(line)
# for line in open('perm_malware_all.txt'):
# 	line = line.strip().split(',')
# 	mal.append(line)

# fben = open('api_benign_all.txt')
# fmal = open('api_malware_all.txt')
# p_file = open('api_p.txt', 'w')

# bline = fben.readline()
# mline = fmal.readline()

# while bline and mline:
# 	bline = bline.strip().split(',')
# 	mline = mline.strip().split(',')
# 	s, p = scipy.stats.mannwhitneyu(bline, mline)
# 	p_file.write(str(p) + '\n')
# 	bline = fben.readline()
# 	mline = fmal.readline()

##### Holm correction #####

pvals = []
for line in open('perm_p.txt'):
	pvals.append(line.strip())

reject, pvals_corrected = statsmodels.sandbox.stats.multicomp.multipletests(pvals, alpha=0.05, method='holm', returnsorted=False)

print pvals_corrected